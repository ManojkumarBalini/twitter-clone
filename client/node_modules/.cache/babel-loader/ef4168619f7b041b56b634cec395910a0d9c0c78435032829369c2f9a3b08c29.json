{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_URL\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    console.error('API Error:', error.response.data);\n    return Promise.reject(error.response.data);\n  } else if (error.request) {\n    // The request was made but no response was received\n    console.error('API Error: No response received');\n    return Promise.reject({\n      error: 'No response from server'\n    });\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    console.error('API Error:', error.message);\n    return Promise.reject({\n      error: error.message\n    });\n  }\n});\nexport const authService = {\n  setToken: token => {\n    if (token) {\n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      localStorage.removeItem('token');\n      delete api.defaults.headers.common['Authorization'];\n    }\n  },\n  login: (email, password) => {\n    return api.post('/auth/login', {\n      email,\n      password\n    }).then(response => response.data).catch(error => {\n      throw error;\n    });\n  },\n  register: userData => {\n    return api.post('/auth/register', userData).then(response => response.data).catch(error => {\n      throw error;\n    });\n  }\n};\nexport const tweetService = {\n  getTweets: () => {\n    return api.get('/tweets').then(response => response.data);\n  },\n  createTweet: content => {\n    return api.post('/tweets', {\n      content\n    }).then(response => response.data);\n  },\n  likeTweet: tweetId => {\n    return api.post(`/tweets/${tweetId}/like`).then(response => response.data);\n  },\n  replyToTweet: (tweetId, content) => {\n    return api.post(`/tweets/${tweetId}/reply`, {\n      content\n    }).then(response => response.data);\n  },\n  getReplies: tweetId => {\n    return api.get(`/tweets/${tweetId}/replies`).then(response => response.data);\n  }\n};\nexport const userService = {\n  followUser: userId => {\n    return api.post(`/users/${userId}/follow`).then(response => response.data);\n  },\n  unfollowUser: userId => {\n    return api.delete(`/users/${userId}/follow`).then(response => response.data);\n  },\n  getProfile: userId => {\n    return api.get(`/users/${userId}`).then(response => response.data);\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","console","data","Promise","reject","message","authService","setToken","setItem","defaults","common","removeItem","login","email","password","post","then","catch","register","userData","tweetService","getTweets","get","createTweet","content","likeTweet","tweetId","replyToTweet","getReplies","userService","followUser","userId","unfollowUser","delete","getProfile"],"sources":["C:/Users/balne/Desktop/twitter-clone/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\n// Add token to requests\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Add response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      console.error('API Error:', error.response.data);\r\n      return Promise.reject(error.response.data);\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.error('API Error: No response received');\r\n      return Promise.reject({ error: 'No response from server' });\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.error('API Error:', error.message);\r\n      return Promise.reject({ error: error.message });\r\n    }\r\n  }\r\n);\r\n\r\nexport const authService = {\r\n  setToken: (token) => {\r\n    if (token) {\r\n      localStorage.setItem('token', token);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n      localStorage.removeItem('token');\r\n      delete api.defaults.headers.common['Authorization'];\r\n    }\r\n  },\r\n  \r\n  login: (email, password) => {\r\n    return api.post('/auth/login', { email, password })\r\n      .then(response => response.data)\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  },\r\n  \r\n  register: (userData) => {\r\n    return api.post('/auth/register', userData)\r\n      .then(response => response.data)\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  }\r\n};\r\n\r\nexport const tweetService = {\r\n  getTweets: () => {\r\n    return api.get('/tweets')\r\n      .then(response => response.data);\r\n  },\r\n  \r\n  createTweet: (content) => {\r\n    return api.post('/tweets', { content })\r\n      .then(response => response.data);\r\n  },\r\n  \r\n  likeTweet: (tweetId) => {\r\n    return api.post(`/tweets/${tweetId}/like`)\r\n      .then(response => response.data);\r\n  },\r\n  \r\n  replyToTweet: (tweetId, content) => {\r\n    return api.post(`/tweets/${tweetId}/reply`, { content })\r\n      .then(response => response.data);\r\n  },\r\n  \r\n  getReplies: (tweetId) => {\r\n    return api.get(`/tweets/${tweetId}/replies`)\r\n      .then(response => response.data);\r\n  }\r\n};\r\n\r\nexport const userService = {\r\n  followUser: (userId) => {\r\n    return api.post(`/users/${userId}/follow`)\r\n      .then(response => response.data);\r\n  },\r\n  \r\n  unfollowUser: (userId) => {\r\n    return api.delete(`/users/${userId}/follow`)\r\n      .then(response => response.data);\r\n  },\r\n  \r\n  getProfile: (userId) => {\r\n    return api.get(`/users/${userId}`)\r\n      .then(response => response.data);\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH;AACX,CAAC,CAAC;;AAEF;AACAC,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACG,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC1BO,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EACT,IAAIA,KAAK,CAACD,QAAQ,EAAE;IAClB;IACA;IACAE,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACD,QAAQ,CAACG,IAAI,CAAC;IAChD,OAAOC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAACD,QAAQ,CAACG,IAAI,CAAC;EAC5C,CAAC,MAAM,IAAIF,KAAK,CAACT,OAAO,EAAE;IACxB;IACAU,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAC;IAChD,OAAOG,OAAO,CAACC,MAAM,CAAC;MAAEJ,KAAK,EAAE;IAA0B,CAAC,CAAC;EAC7D,CAAC,MAAM;IACL;IACAC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACK,OAAO,CAAC;IAC1C,OAAOF,OAAO,CAACC,MAAM,CAAC;MAAEJ,KAAK,EAAEA,KAAK,CAACK;IAAQ,CAAC,CAAC;EACjD;AACF,CACF,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG;EACzBC,QAAQ,EAAGb,KAAK,IAAK;IACnB,IAAIA,KAAK,EAAE;MACTC,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEd,KAAK,CAAC;MACpCP,GAAG,CAACsB,QAAQ,CAACZ,OAAO,CAACa,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUhB,KAAK,EAAE;IAClE,CAAC,MAAM;MACLC,YAAY,CAACgB,UAAU,CAAC,OAAO,CAAC;MAChC,OAAOxB,GAAG,CAACsB,QAAQ,CAACZ,OAAO,CAACa,MAAM,CAAC,eAAe,CAAC;IACrD;EACF,CAAC;EAEDE,KAAK,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAC1B,OAAO3B,GAAG,CAAC4B,IAAI,CAAC,aAAa,EAAE;MAAEF,KAAK;MAAEC;IAAS,CAAC,CAAC,CAChDE,IAAI,CAACjB,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAC/Be,KAAK,CAACjB,KAAK,IAAI;MACd,MAAMA,KAAK;IACb,CAAC,CAAC;EACN,CAAC;EAEDkB,QAAQ,EAAGC,QAAQ,IAAK;IACtB,OAAOhC,GAAG,CAAC4B,IAAI,CAAC,gBAAgB,EAAEI,QAAQ,CAAC,CACxCH,IAAI,CAACjB,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAC/Be,KAAK,CAACjB,KAAK,IAAI;MACd,MAAMA,KAAK;IACb,CAAC,CAAC;EACN;AACF,CAAC;AAED,OAAO,MAAMoB,YAAY,GAAG;EAC1BC,SAAS,EAAEA,CAAA,KAAM;IACf,OAAOlC,GAAG,CAACmC,GAAG,CAAC,SAAS,CAAC,CACtBN,IAAI,CAACjB,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC;EACpC,CAAC;EAEDqB,WAAW,EAAGC,OAAO,IAAK;IACxB,OAAOrC,GAAG,CAAC4B,IAAI,CAAC,SAAS,EAAE;MAAES;IAAQ,CAAC,CAAC,CACpCR,IAAI,CAACjB,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC;EACpC,CAAC;EAEDuB,SAAS,EAAGC,OAAO,IAAK;IACtB,OAAOvC,GAAG,CAAC4B,IAAI,CAAC,WAAWW,OAAO,OAAO,CAAC,CACvCV,IAAI,CAACjB,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC;EACpC,CAAC;EAEDyB,YAAY,EAAEA,CAACD,OAAO,EAAEF,OAAO,KAAK;IAClC,OAAOrC,GAAG,CAAC4B,IAAI,CAAC,WAAWW,OAAO,QAAQ,EAAE;MAAEF;IAAQ,CAAC,CAAC,CACrDR,IAAI,CAACjB,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC;EACpC,CAAC;EAED0B,UAAU,EAAGF,OAAO,IAAK;IACvB,OAAOvC,GAAG,CAACmC,GAAG,CAAC,WAAWI,OAAO,UAAU,CAAC,CACzCV,IAAI,CAACjB,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC;EACpC;AACF,CAAC;AAED,OAAO,MAAM2B,WAAW,GAAG;EACzBC,UAAU,EAAGC,MAAM,IAAK;IACtB,OAAO5C,GAAG,CAAC4B,IAAI,CAAC,UAAUgB,MAAM,SAAS,CAAC,CACvCf,IAAI,CAACjB,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC;EACpC,CAAC;EAED8B,YAAY,EAAGD,MAAM,IAAK;IACxB,OAAO5C,GAAG,CAAC8C,MAAM,CAAC,UAAUF,MAAM,SAAS,CAAC,CACzCf,IAAI,CAACjB,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC;EACpC,CAAC;EAEDgC,UAAU,EAAGH,MAAM,IAAK;IACtB,OAAO5C,GAAG,CAACmC,GAAG,CAAC,UAAUS,MAAM,EAAE,CAAC,CAC/Bf,IAAI,CAACjB,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC;EACpC;AACF,CAAC;AAED,eAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}